{"ast":null,"code":"import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n/* import specific icons */\n\nimport { faUserSecret } from \"@fortawesome/free-solid-svg-icons\";\n/* import font awesome icon component */\n\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nlibrary.add(faUserSecret); // import upperFirst from \"lodash/upperFirst\";\n// import camelCase from \"lodash/camelCase\";\n\ncreateApp(App).use(store).use(router).component(\"font-awesome-icon\", FontAwesomeIcon).mount(\"#app\"); // const requireComponent = require.context(\n//   // The relative path of the components folder\n//   \"./components\",\n//   // Whether or not to look in subfolders\n//   false,\n//   // The regular expression used to match base component filenames\n//   /Base[A-Z]\\w+\\.(vue|js)$/\n// );\n// requireComponent.keys().forEach((fileName) => {\n//   // Get component config\n//   const componentConfig = requireComponent(fileName);\n//   // Get PascalCase name of component\n//   const componentName = upperFirst(\n//     camelCase(\n//       // Gets the file name regardless of folder depth\n//       fileName\n//         .split(\"/\")\n//         .pop()\n//         .replace(/\\.\\w+$/, \"\")\n//     )\n//   );\n//   app.component(\n//     componentName,\n//     // Look for the component options on `.default`, which will\n//     // exist if the component was exported with `export default`,\n//     // otherwise fall back to module's root.\n//     componentConfig.default || componentConfig\n//   );\n// });","map":{"version":3,"names":["createApp","App","router","store","library","faUserSecret","FontAwesomeIcon","add","use","component","mount"],"sources":["C:/Users/Admin/Desktop/Web Template/kisisuneo.github.io/vuejs/real-world-vue/src/main.js"],"sourcesContent":["import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\n/* import specific icons */\nimport { faUserSecret } from \"@fortawesome/free-solid-svg-icons\";\n\n/* import font awesome icon component */\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nlibrary.add(faUserSecret);\n\n// import upperFirst from \"lodash/upperFirst\";\n// import camelCase from \"lodash/camelCase\";\n\ncreateApp(App)\n  .use(store)\n  .use(router)\n  .component(\"font-awesome-icon\", FontAwesomeIcon)\n  .mount(\"#app\");\n\n// const requireComponent = require.context(\n//   // The relative path of the components folder\n//   \"./components\",\n//   // Whether or not to look in subfolders\n//   false,\n//   // The regular expression used to match base component filenames\n//   /Base[A-Z]\\w+\\.(vue|js)$/\n// );\n\n// requireComponent.keys().forEach((fileName) => {\n//   // Get component config\n//   const componentConfig = requireComponent(fileName);\n\n//   // Get PascalCase name of component\n//   const componentName = upperFirst(\n//     camelCase(\n//       // Gets the file name regardless of folder depth\n//       fileName\n//         .split(\"/\")\n//         .pop()\n//         .replace(/\\.\\w+$/, \"\")\n//     )\n//   );\n//   app.component(\n//     componentName,\n//     // Look for the component options on `.default`, which will\n//     // exist if the component was exported with `export default`,\n//     // otherwise fall back to module's root.\n//     componentConfig.default || componentConfig\n//   );\n// });\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAEA;;AACA,SAASC,YAAT,QAA6B,mCAA7B;AAEA;;AACA,SAASC,eAAT,QAAgC,8BAAhC;AAEAF,OAAO,CAACG,GAAR,CAAYF,YAAZ,E,CAEA;AACA;;AAEAL,SAAS,CAACC,GAAD,CAAT,CACGO,GADH,CACOL,KADP,EAEGK,GAFH,CAEON,MAFP,EAGGO,SAHH,CAGa,mBAHb,EAGkCH,eAHlC,EAIGI,KAJH,CAIS,MAJT,E,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}